{{ if eq .chezmoi.hostname "B00T" }}
fastfetch
{{ end }}

# ENV
export ZSH="$HOME/.oh-my-zsh"
export EDITOR=nvim
export WORDCHARS='' # Allow for word jumps
export SSH_AUTH_SOCK=$XDG_RUNTIME_DIR/gcr/ssh
{{- if eq .chezmoi.hostname "XPS-9510" }}
export ANDROID_HOME=$HOME/Android/Sdk
{{- end }}
export DENO_INSTALL="$HOME/.deno"
export MANPAGER="nvim +Man!"
export PNPM_HOME=$HOME/.local/share/pnpm

# PATH
{{- if eq .chezmoi.hostname "XPS-9510" }}
export PATH=/var/lib/flatpak/exports/bin:$PATH
export PATH=~/.local/share/flatpak/exports/bin:$PATH
export PATH=$PATH:$ANDROID_HOME/emulator
export PATH=$PATH:$ANDROID_HOME/platform-tools
{{- end }}
export PATH=$HOME/.local/bin:$PATH
export PATH=~/.npm-global/bin:$PATH
export PATH="$DENO_INSTALL/bin:$PATH"
export PATH="$PNPM_HOME:$PATH"
if [[ ":$FPATH:" != *":$HOME/.zsh/completions:"* ]]; then export FPATH="$HOME/.zsh/completions:$FPATH"; fi

# SOURCE
source $HOME/.deno/env

# ZINIT INIT
if [[ ! -f $HOME/.local/share/zinit/zinit.git/zinit.zsh ]]; then
    print -P "%F{33} %F{220}Installing %F{33}ZDHARMA-CONTINUUM%F{220} Initiative Plugin Manager (%F{33}zdharma-continuum/zinit%F{220})â€¦%f"
    command mkdir -p "$HOME/.local/share/zinit" && command chmod g-rwX "$HOME/.local/share/zinit"
    command git clone https://github.com/zdharma-continuum/zinit "$HOME/.local/share/zinit/zinit.git" && \
        print -P "%F{33} %F{34}Installation successful.%f%b" || \
        print -P "%F{160} The clone has failed.%f%b"
fi

source "$HOME/.local/share/zinit/zinit.git/zinit.zsh"
autoload -Uz _zinit
(( ${+_comps} )) && _comps[zinit]=_zinit

# PLUGINS
zinit ice wait lucid"1"
zinit light Aloxaf/fzf-tab

zinit light zsh-users/zsh-autosuggestions

zinit ice wait lucid
zinit light zsh-users/zsh-syntax-highlighting

zinit ice wait"0" lucid atload'unalias zi'
zinit light ajeetdsouza/zoxide

zinit ice wait"2" lucid
zinit light loiccoyle/zsh-github-copilot

zinit ice wait"1" lucid
zinit snippet OMZP::sudo

zinit ice wait lucid atload'zicompinit; zicdreplay'
zinit light zsh-users/zsh-completions

# COMPLETION STYLING
zstyle ':completion:*' menu no 									# Force zsh to not show completion menu
zstyle ':completion:*' list-colors ${(s.:.)LS_COLORS} 			# Use LS_COLORS for completion colors
zstyle ':completion:*' matcher-list 'm:{a-zA-Z}={A-Za-z}' 		# Case insensitive completion
zstyle ':fzf-tab:complete:*' fzf-preview 'ls --color $realpath' # Use ls to preview files in fzf-tab

# HISTORY (man zshoptions)
HISTFILE=$HOME/.zsh_history
HISTSIZE=50000
SAVEHIST=$HISTSIZE
HISTDUP=erase

setopt APPENDHISTORY
setopt SHAREHISTORY
setopt HIST_EXPIRE_DUPS_FIRST
setopt HIST_IGNORE_DUPS
setopt HIST_IGNORE_ALL_DUPS
setopt HIST_IGNORE_SPACE
setopt HIST_FIND_NO_DUPS
setopt HIST_SAVE_NO_DUPS

# ALIASES
alias "ls"="ls --hyperlink=auto --color=auto"
alias "l"="ls -lah --hyperlink=auto --color=auto"
alias "cat"="bat"
alias "ssh"="kitty +kitten ssh"
alias "icat"="kitten icat"

# CUSTOM FUNCTION
sf() {
    local query="$1"
    sudo updatedb && sudo locate -i "$query" | fzf --query="$query" --bind 'ctrl-r:reload(sudo updatedb && sudo locate -i "$query")' | wl-copy -o
}

function yy() {
	local tmp="$(mktemp -t "yazi-cwd.XXXXXX")"
	yazi "$@" --cwd-file="$tmp"
	if cwd="$(cat -- "$tmp")" && [ -n "$cwd" ] && [ "$cwd" != "$PWD" ]; then
		builtin cd -- "$cwd"
	fi
	rm -f -- "$tmp"
}

# KEY BINDINGS
# Make copilot suggest and explain
bindkey '^[F' zsh_gh_copilot_explain  # bind Alt+Shift+F to explain
bindkey '^[f' zsh_gh_copilot_suggest  # bind Alt+f to suggest

# Make ctrl+left/right jump words
bindkey "^[[1;5C" forward-word
bindkey "^[[1;5D" backward-word

# Make ctrl+delete delete words
bindkey '^[[3;5~' kill-word

# Make ctrl+up/down search based on prefix
for direction (up down) {
  autoload $direction-line-or-beginning-search
  zle -N $direction-line-or-beginning-search
  key=$terminfo[kcu$direction[1]1]
  for key ($key ${key/O/[})
    bindkey $key $direction-line-or-beginning-search
}

# EVAL 
eval "$(fzf --zsh)"
eval "$(oh-my-posh init zsh --config ~/.config/oh-my-posh/themes/emodipt-extend.omp.json)"
